[tool.poetry]
name = "ducklingscript"
version = "0.2.1"
description = "A transcompiler for converting DucklingScript code into Rubber Ducky Language 1.0"
authors = ["Dragon of Shuu <loganmcederlof@gmail.com>"]
readme = "README.md"
repository = "https://github.com/DragonOfShuu/DucklingScript/"
documentation = "https://ducklingscript.dragonofshuu.dev/"
packages = [{include = "ducklingscript"}]
exclude = [
    "ducklingscript/tasks.py"
]
keywords = [
    "duckyscript",
    "flipper",
    "ducky",
    "key injection"
]

[tool.poetry.dependencies]
python = "^3.11"
typer = {extras = ["all"], version = "^0.9.0"}
pyyaml = "^6.0.1"
setuptools = "^69.0.2"
quackinter = "^0.2.1.1"

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
pytest = "^7.4.3"
poethepoet = "^0.29.0"
ruff = "^0.7.2"


[tool.poetry.urls]
"DragonOfShuu.dev" = "https://dragonofshuu.dev/"

[tool.poe.tasks]
format = "black ."
lint = "ruff check"
polish = ["format", "lint"]

[tool.poe.tasks.encode]
script = "ducklingscript.tasks:base64vlq_encode"
args = [{name = "nums", positional = true}]

[tool.poe.tasks.decode]
script = "ducklingscript.tasks:base64vlq_decode"
args = [{name = "text", positional = true}]

[tool.poe.tasks.test]
script = "tests.custom:run_test"
args = [{name = "index", positional = true}]

[tool.poe.tasks.gen_tests]
script = "tests.custom:generate_tests"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "N", "ANN0", "Q002"]
ignore = ["F403"]

[tool.ruff.lint.per-file-ignores]
# Ignore F401, only for init files
"__init__.py" = ["F401"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
duckling = "ducklingscript.main:app"
ducklify = "ducklingscript.main:app"
